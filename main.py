from sonastik import *
# üìñ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞: –°–ª–æ–≤–∞—Ä—å
# –¢—Ä—ë—Ö—ä—è–∑—ã—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å ‚úÖ
# –≠—Å—Ç–æ–Ω—Å–∫–∏–π üá™üá™
# –†—É—Å—Å–∫–∏–π üá∑üá∫
# –ê–Ω–≥–ª–∏–π—Å–∫–∏–π üá¨üáß
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–≤–æ–ª—è—Ç—å:
# –ü–µ—Ä–µ–≤–æ–¥ —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–π
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤, –µ—Å–ª–∏ —Å–ª–æ–≤–∞ –Ω–µ—Ç
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–ª–æ–≤–æ —É–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π (—Ç–µ—Å—Ç) ‚Äî –≤—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç—Å—Ç–æ–Ω—Å–∫–∏–π ‚Üí —Ä—É—Å—Å–∫–∏–π, —Ä—É—Å—Å–∫–∏–π ‚Üí –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ —Ç.–¥.)
# –ë–æ–Ω—É—Å: Text-to-Speech (—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥—É–ª—è pyttsx3)

# –ü–ª–∞–Ω –ø—Ä–æ–≥—Ä–∞–º–º—ã:
# *–° –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ø–∏—Å–∫–æ–≤:
# est = ['koer', 'kass', 'maja', 'auto', 'p√§ike']
# rus = ['—Å–æ–±–∞–∫–∞', '–∫–æ—à–∫–∞', '–¥–æ–º', '–º–∞—à–∏–Ω–∞', '—Å–æ–ª–Ω—Ü–µ']
# eng = ['dog', 'cat', 'house', 'car', 'sun']

# –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ø–∏—Å–∫–æ–≤:

# sonastik = []
# for e, r, g in zip(est, rus, eng):
#     sonastik.append({'est': e, 'rus': r, 'eng': g})

# * –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤:

# # –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç—Ä—ë—Ö —è–∑—ã–∫–æ–≤
# sonad = [
#     {'est': 'koer', 'rus': '—Å–æ–±–∞–∫–∞', 'eng': 'dog'},
#     {'est': 'kass', 'rus': '–∫–æ—à–∫–∞', 'eng': 'cat'},
#     {'est': 'maja', 'rus': '–¥–æ–º', 'eng': 'house'},
#     {'est': 'auto', 'rus': '–º–∞—à–∏–Ω–∞', 'eng': 'car'},
#     {'est': 'p√§ike', 'rus': '—Å–æ–ª–Ω—Ü–µ', 'eng': 'sun'}
# ]

# def tolkija(sonad, allikas, siht, sona):
#     for kirje in sonad:
#         if kirje[allikas] == sona.lower():
#             return kirje[siht]
#     return "–°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
# def lisa_sona(sonad):
#     print("–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–∞—Ä—å!")
#     uus_est = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ —ç—Å—Ç–æ–Ω—Å–∫–æ–º: ").strip().lower()
#     uus_rus = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º: ").strip().lower()
#     uus_eng = input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º: ").strip().lower()
    
#     sonad.append({'est': uus_est, 'rus': uus_rus, 'eng': uus_eng})
#     print("–ù–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")

# –ò–¥–µ–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π (–≤—Å–µ–≥–æ –Ω–µ –º–µ–Ω–µ–µ 12!):

#     loo_sonastik() ‚Äî —Å–æ–∑–¥–∞—ë—Ç —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ç—Ä—ë—Ö —è–∑—ã–∫–æ–≤

#     otsi_sona() ‚Äî –∏—â–µ—Ç —Å–ª–æ–≤–æ –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—ã –Ω–∞ –¥—Ä—É–≥–∏–µ

#     lisa_sona() ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–∞ —Ç—Ä—ë—Ö —è–∑—ã–∫–∞—Ö

#     paranda_sona() ‚Äî –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–ª–æ–≤–æ

#     kuva_sonad() ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å

#     vali_keelte_suund() ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å –∫–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –∫–∞–∫–æ–π –æ–Ω —Ö–æ—á–µ—Ç –ø–µ—Ä–µ–≤–µ—Å—Ç–∏

#     testi_teadmisi() ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤

#     kuva_tulemus() ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞

#     kysi_kasutajalt_sisestus() ‚Äî –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–≤–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –ø—É—Å—Ç–æ—Ç—É

#     text_to_speech() ‚Äî –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç —Å–ª–æ–≤–æ –≤—Å–ª—É—Ö

#     kuva_menuu() ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

#     valjasta_tervitus() ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω–∞—á–∞–ª–µ

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã:

#     sonastik.py ‚Äî –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã–µ

#     main.py ‚Äî –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏ –º–µ–Ω—é

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å:

# –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –æ–Ω–æ —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–ª–æ—Å—å –≤ —Å–ø–∏—Å–æ–∫ sonastik, –ø–æ—Å–ª–µ —á–µ–≥–æ –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!
sonad=[
    {'est': 'koer', 'rus': '—Å–æ–±–∞–∫–∞', 'eng': 'dog' },
    {'est': 'kass', 'rus': '–∫–æ—à–∫–∞', 'eng': 'cat'},
    {'est': 'maja', 'rus': '–¥–æ–º', 'eng': 'house'},
    {'est': 'auto', 'rus': '–º–∞—à–∏–Ω–∞', 'eng': 'car'},
    {'est': 'p√§ike', 'rus': '—Å–æ–ª–Ω—Ü–µ', 'eng': 'sun'}
] 
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –ø–æ–∑–≤–æ–ª—è—Ç—å:
# –ü–µ—Ä–µ–≤–æ–¥ —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞ –Ω–∞ –¥—Ä—É–≥–æ–π
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤, –µ—Å–ª–∏ —Å–ª–æ–≤–∞ –Ω–µ—Ç
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–ª–æ–≤–æ —É–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞–Ω–∏–π (—Ç–µ—Å—Ç) ‚Äî –≤—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç—Å—Ç–æ–Ω—Å–∫–∏–π ‚Üí —Ä—É—Å—Å–∫–∏–π, —Ä—É—Å—Å–∫–∏–π ‚Üí –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –∏ —Ç.–¥.)
# –ë–æ–Ω—É—Å: Text-to-Speech (—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–æ–¥—É–ª—è pyttsx3)
 
print(" ----- MENU -----\n",
      "1. –ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞;\n",
      "2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤;\n",
      "3. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤;\n",
      "4. –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å;\n",
      "5. –¢–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏–µ —Å–ª–æ–≤;\n",
      "6. –û–∑–≤—É—á–∏—Ç—å –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å;\n",
      "7. –í—ã–π—Ç–∏.")
while True:
    try:
        valik=int(input("Sisesta oma valik: "))
        if valik==1:
            while True:
                sona=input("–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ: ").lower().strip()
                if sona.isalpha():break
                else:
                    print("–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤!")
            while True:
                allikas=input("–≤–≤–µ–¥–∏—Ç–µ —Å –∫–∞–∫–æ–≥–æ —è–∑—ã–∫–∞ (est, eng, rus): ").strip()
                if allikas=="est" or allikas=="rus" or allikas=="eng": break
                else: 
                    print("–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ 'est' v√µi 'eng' v√µi 'rus'!")
            while True:
                siht=input("–≤–≤–µ–¥–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–π —è–∑—ã–∫ (est, eng, rus): ").strip()
                if siht=="rus" or siht=="eng" or siht=="est": break
                else: 
                    print("–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ 'est' v√µi 'eng' v√µi 'rus'!")
            tulemus=tolkija(sonad, allikas, siht, sona)
            print(tulemus)
        elif valik==2:
            lisa_sona(sonad)
        elif valik==3:
            print()
        elif valik==4:
            print(vaata_sona(sonad))
        elif valik==5:
            print()
        elif valik==6:
            print()
        elif valik==7:
            break
        else:
            print("Sisestage number vahemikus 1 kuni 6!")
    except:
        print("Vastus peab olema numbriline!")

